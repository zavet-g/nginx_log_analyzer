"""init

Revision ID: 1f8da8a15a86
Revises: None
Create Date: 2025-05-23 12:55:02.262022

"""

# revision identifiers, used by Alembic.
revision = '1f8da8a15a86'
down_revision = None

import sqlalchemy as sa

from alembic import context
from alembic import op


def upgrade():
    schema_upgrades()
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_upgrades()

    import os

    if os.getenv('ENVIRONMENT') in ['LOCAL', 'PYTEST']:
        from loguru import logger

        logger.opt(colors=True).info('Success migration [ <green>OK</green> ]')
    else:
        pg_user = 'prod_user'
        pg_schema = 'etalin_schema'
        op.execute(f'GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA {pg_schema} TO {pg_user}')
        op.execute(f'GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA {pg_schema} TO {pg_user}')
        op.execute(f'GRANT ALL PRIVILEGES ON ALL FUNCTIONS IN SCHEMA {pg_schema} TO {pg_user}')


def downgrade():
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_downgrades()
    schema_downgrades()


def schema_upgrades():
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'server_model',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('description', sa.String(length=255), nullable=True),
        sa.Column('ip_address', sa.String(length=45), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name'),
        schema='nginx_parser_schema',
    )
    op.create_table(
        'log_entry_model',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('server_id', sa.Integer(), nullable=False),
        sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
        sa.Column('remote_addr', sa.String(length=45), nullable=False),
        sa.Column('method', sa.String(length=10), nullable=False),
        sa.Column('uri', sa.String(length=2048), nullable=False),
        sa.Column('http_version', sa.String(length=10), nullable=False),
        sa.Column('status', sa.Integer(), nullable=False),
        sa.Column('size', sa.Integer(), nullable=False),
        sa.Column('referrer', sa.String(length=2048), nullable=True),
        sa.Column('user_agent', sa.String(length=1024), nullable=True),
        sa.ForeignKeyConstraint(
            ['server_id'], ['nginx_parser_schema.server_model.id'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id'),
        schema='nginx_parser_schema',
    )
    # ### end Alembic commands ###


def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('log_entry_model', schema='nginx_parser_schema')
    op.drop_table('server_model', schema='nginx_parser_schema')
    # ### end Alembic commands ###


def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    pass


def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    pass
